<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- 自动扫描该包，springmvc会将包下用了@controller注解的类注册问spring的controller -->
	<context:component-scan base-package="org.exam.controller" />
	
	
	<!-- 要使shiro在springmvc上的注解生效，需要将以下两个bean配置到springmvc.xml中 -->
	<!-- ========================================================================================= -->
	<!-- 启用Spring IOC容器Shiro注解，但必须配置了lifecycleBeanPostProcessor后才可以使用 -->
	
	<!-- <bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean> -->
	
	<!-- 开启Spring AOC Shiro注解支持 -->
	<!-- <bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securitymanager" ref="securitymanager" />
	</bean> -->
	<!-- ========================================================================================= -->
	
	

	
	<!-- 定义springmvc的拦截器 -->
<!-- 	<mvc:interceptors> -->
<!-- 		<mvc:interceptor> -->
			<!-- 拦截所有请求 -->
<!-- 			<mvc:mapping path="/*"/> -->
			<!-- 自定义判断用户权限的拦截类 -->
<!-- 			<bean class="org.jkl.crm.interceptor.AuthorizedInterceptor"></bean> -->
<!-- 		</mvc:interceptor> -->
<!-- 	</mvc:interceptors> -->
	
	<!-- 视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	
	<!-- 要使shiro在springmvc上的注解生效，需要将以下两个bean配置到springmvc.xml中 -->
	<!-- ========================================================================================= -->
	<!-- 启用Spring IOC容器Shiro注解，但必须配置了lifecycleBeanPostProcessor后才可以使用 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>
	
	<!-- 开启Spring AOC Shiro注解支持 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- ========================================================================================= -->
	
	
	<!-- ========================================================================================= -->
<!-- 	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                登录
                <prop key="org.apache.shiro.authz.UnauthenticatedException">
                    redirect:/login
                </prop>
                授权
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    redirect:/admin/common/exceptionLog
                </prop>
            </props>
        </property>
        <property name="defaultErrorView" value="error/genericView"/>
    </bean> -->
	<!-- ========================================================================================= -->
	
	
	<mvc:view-controller path="/" view-name="index/main"/>
	<mvc:view-controller path="/manage" view-name="manager/manager"/>

	<!-- 使用默认的servlet来响应    《静态文件 》 -->
	<mvc:default-servlet-handler/>
	
	
	<!-- 设置默认配置方案 ，很多情况下必须要有此配置-->
	<mvc:annotation-driven/>




	<!-- 文件上传下载 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传文件大小上限 ， 单位为字节（100MB） -->
		<property name="maxUploadSize" value="104857600"></property>
		<!-- 请求的编码格式，必须和jsp中的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
	
</beans>
