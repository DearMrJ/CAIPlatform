<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
    <mapper namespace="org.exam.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="org.exam.entity.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="class_id" property="classId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="grade" property="grade" jdbcType="VARCHAR" />
        <result column="salt" property="salt" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="tel" property="tel" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="img" property="img" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
        <result column="total_time" property="totalTime" jdbcType="INTEGER" />
        <association property="faculty" javaType="org.exam.entity.Faculty" >
        	<result property="id" jdbcType="INTEGER" column="faculty_id"/>
			<result property="name" jdbcType="VARCHAR" column="faculty_name"/>
			<result property="description" jdbcType="VARCHAR" column="faculty_description"/>	
        </association>
        <association property="classes" javaType="org.exam.entity.Classes" >
        	<result property="id" jdbcType="INTEGER" column="class_id"/>
			<result property="name" jdbcType="VARCHAR" column="class_name"/>
			<result property="description" jdbcType="VARCHAR" column="class_description"/>	
        </association>
        <collection property="roles" column="role_id" javaType="ArrayList" ofType="org.exam.entity.Role">
            <result property="roleId" jdbcType="INTEGER" column="role_id"/>
            <result property="name" jdbcType="VARCHAR" column="role_name"/>
            <result property="description" jdbcType="VARCHAR" column="role_description"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List" >
        id, user_id, class_id, username, password, description, grade, salt, nickname, email, tel, sex, age, img, status,
        create_time, update_time, last_login_time,total_time
    </sql>
    
    <select id="findByCondition" parameterType="org.exam.vo.UserConditionVo" resultMap="BaseResultMap">
    	SELECT
    	u.*,
    	f.id AS faculty_id,
    	f.name AS faculty_name,
    	f.description AS faculty_description,
    	c.id AS class_id,
    	c.name AS class_name,
    	c.description AS class_description,
    	r.role_id AS role_id,
    	r.name AS role_name,
    	r.description AS role_description
    	FROM
    	user_inf u
    	INNER JOIN class_inf c ON u.class_id = c.id
    	INNER JOIN faculty_inf f ON c.faculty_id = f.id
    	LEFT JOIN user_role_inf ur ON u.user_id = ur.user_id
        LEFT JOIN role_inf r ON ur.role_id = r.role_id
    	WHERE 1=1
    	<if test="username !=null and username != ''">
            AND u.username like concat('%', #{username, jdbcType=VARCHAR}, '%')
        </if>
        <if test="nickname !=null and nickname != ''">
            AND u.nickname like concat('%', #{nickname, jdbcType=VARCHAR}, '%')
        </if>
        <if test="grade != null and grade != ''">
			AND	u.grade = #{grade}
		</if>
        <if test="facultyId !=null">
            AND c.faculty_id = #{facultyId}
        </if>
        <if test="classId !=null">
            AND u.class_id = #{classId}
        </if>
        <if test="status != null">
			AND	u.status = #{status}
		</if>
		order by u.id asc
    </select>
    
    <select id="selectGradeList" resultType="String">
    	SELECT distinct grade FROM user_inf
    </select>

    <select id="selectUsers" resultMap="BaseResultMap" parameterType="org.exam.entity.User">
        SELECT u.*,r.role_id AS role_id,r.name AS role_name,r.description AS  role_description
        FROM user_inf u
        left join user_role_inf ur on u.user_id = ur.user_id
        left join role_inf r on ur.role_id = r.role_id
        WHERE u.status=1
        <if test="username !=null and username != ''">
            AND u.username like concat('%', #{username}, '%')
        </if>
        <if test="email !=null and email != ''">
            AND u.email like concat('%', #{email}, '%')
        </if>
        <if test="tel !=null and tel != ''">
            AND u.tel like concat('%', #{tel}, '%')
        </if>
    </select>

    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user_inf WHERE username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap">
    	SELECT
    	u.*,
    	f.name AS faculty_name,
    	c.id AS class_id,
    	c.name AS class_name,
    	r.name AS role_name
    	FROM
    	user_inf u
    	INNER JOIN class_inf c ON u.class_id = c.id
    	INNER JOIN faculty_inf f ON c.faculty_id = f.id
    	LEFT JOIN user_role_inf ur ON u.user_id = ur.user_id
        LEFT JOIN role_inf r ON ur.role_id = r.role_id
        WHERE u.user_id = #{userId,jdbcType=VARCHAR}
    </select>
    
    <select id="selectRoleByUserId" resultType="String">
    	SELECT
    	r.name AS role_name
    	FROM
    	user_inf u
    	LEFT JOIN user_role_inf ur ON u.user_id = ur.user_id
        LEFT JOIN role_inf r ON ur.role_id = r.role_id
        WHERE u.user_id = #{userId,jdbcType=VARCHAR}
    </select>
    
    <insert id="batchInsert" parameterType="java.util.List">
    	<selectKey resultType ="java.lang.Integer" keyProperty= "id" order= "AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey >
    	INSERT INTO user_inf (user_id,class_id,username,password,description,salt,grade,
        nickname,email,tel,sex,age,img,status,total_time)
    	VALUES
    	<foreach collection="list" item="item" index="index" separator=",">
    		(#{item.userId},#{item.classId},#{item.username},#{item.password},#{item.description},#{item.salt},#{item.grade},#{item.nickname},
    		#{item.email},#{item.tel},#{item.sex},#{item.age},#{item.img},#{item.status},#{item.totalTime})
    	</foreach>
    </insert>

    <update id="updateLastLoginTime" parameterType="org.exam.entity.User">
        update user_inf SET last_login_time = now() where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByUserId" parameterType="org.exam.entity.User">
        update user_inf SET username=#{username},sex=#{sex},nickname=#{nickname},grade=#{grade},class_id=#{classId},email=#{email},tel=#{tel},age=#{age},img=#{img},description=#{description},update_time = now() where user_id = #{userId}
    </update>

    <update id="updateStatusBatch" parameterType="map">
        UPDATE
        user_inf
        SET
        status=#{status}, update_time=now()
        where
        user_id in
        <foreach collection="userIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <select id="findByRoleId" resultMap="BaseResultMap">
        SELECT a.id, a.user_id, a.username, a.password, a.salt, a.email, a.tel, a.sex, a.age, a.status,
        a.create_time, a.update_time, a.last_login_time, a.total_time
        FROM user_inf a 
        INNER JOIN user_role_inf b ON a.user_id = b.user_id 
        WHERE b.role_id = #{roleId,jdbcType=VARCHAR}
    </select>

    <select id="findByRoleIds" resultMap="BaseResultMap">
        SELECT a.id, a.user_id, a.username, a.password, a.salt, a.email, a.tel, a.sex, a.age, a.status,
        a.create_time, a.update_time, a.last_login_time FROM user_inf a INNER JOIN user_role_inf b ON a.user_id = b.user_id
        WHERE b.role_id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    
    <select id="academyPassNumSta" resultType="HashMap">
    	SELECT
    	COUNT(u.user_id) AS num,
    	f.name AS faculty_name
    	from
    	user u
		INNER JOIN class_inf c ON u.class_id = c.id
		INNER JOIN faculty_inf f ON c.faculty_id = f.id 
		GROUP BY
		f.id
    </select>
    
    <delete id="deleteBatch" parameterType="map">
    	DELETE
    	FROM
    	user_inf
    	WHERE
    	user_id in
        <foreach collection="userIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>